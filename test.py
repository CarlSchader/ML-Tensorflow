print('''
{
	"name": "ValueError",
	"message": "in user code:\n\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/training.py\", line 1160, in train_function  *\n        return step_function(self, iterator)\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/training.py\", line 1146, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/training.py\", line 1135, in run_step  **\n        outputs = model.train_step(data)\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/training.py\", line 993, in train_step\n        y_pred = self(x, training=True)\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/utils/traceback_utils.py\", line 70, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n    File \"/var/folders/sw/q7k30xcj51x3tc06z506z3n00000gn/T/__autograph_generated_file56xer_oq.py\", line 10, in tf__call\n        (new_outputs, new_states) = ag__.converted_call(ag__.ld(self).simpleRNNCell, (ag__.ld(inputs), ag__.ld(states)), None, fscope)\n\n    ValueError: Exception encountered when calling layer \"ln_simple_rnn_cell_77\" \"                 f\"(type LNSimpleRNNCell).\n    \n    in user code:\n    \n        File \"/var/folders/sw/q7k30xcj51x3tc06z506z3n00000gn/T/ipykernel_84655/3103126211.py\", line 16, in call  *\n            new_outputs, new_states = self.simpleRNNCell(inputs, states)\n        File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/layers/rnn/base_rnn.py\", line 623, in __call__  **\n            return super().__call__(inputs, **kwargs)\n        File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/utils/traceback_utils.py\", line 70, in error_handler\n            raise e.with_traceback(filtered_tb) from None\n        File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/input_spec.py\", line 232, in assert_input_compatibility\n            raise ValueError(\n    \n        ValueError: Input 0 of layer \"simple_rnn\" is incompatible with the layer: expected ndim=3, found ndim=2. Full shape received: (None, 1)\n    \n    \n    Call arguments received by layer \"ln_simple_rnn_cell_77\" \"                 f\"(type LNSimpleRNNCell):\n      • inputs=tf.Tensor(shape=(None, 1), dtype=float32)\n      • states=('tf.Tensor(shape=(None, 20), dtype=float32)',)\n",
	"stack": "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)\n\u001b[1;32m/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb Cell 15\u001b[0m in \u001b[0;36m<cell line: 13>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=0'>1</a>\u001b[0m model \u001b[39m=\u001b[39m keras\u001b[39m.\u001b[39mmodels\u001b[39m.\u001b[39mSequential([\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=1'>2</a>\u001b[0m   keras\u001b[39m.\u001b[39mlayers\u001b[39m.\u001b[39mRNN(LNSimpleRNNCell(\u001b[39m20\u001b[39m), return_sequences\u001b[39m=\u001b[39m\u001b[39mTrue\u001b[39;00m),\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=2'>3</a>\u001b[0m   keras\u001b[39m.\u001b[39mlayers\u001b[39m.\u001b[39mRNN(LNSimpleRNNCell(\u001b[39m20\u001b[39m), return_sequences\u001b[39m=\u001b[39m\u001b[39mTrue\u001b[39;00m),\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=3'>4</a>\u001b[0m   keras\u001b[39m.\u001b[39mlayers\u001b[39m.\u001b[39mTimeDistributed(keras\u001b[39m.\u001b[39mlayers\u001b[39m.\u001b[39mDense(\u001b[39m10\u001b[39m))\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=4'>5</a>\u001b[0m ])\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=6'>7</a>\u001b[0m model\u001b[39m.\u001b[39mcompile(\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=7'>8</a>\u001b[0m   loss\u001b[39m=\u001b[39mkeras\u001b[39m.\u001b[39mlosses\u001b[39m.\u001b[39mMSE,\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=8'>9</a>\u001b[0m   metrics\u001b[39m=\u001b[39m[last_time_step_mse],\n\u001b[1;32m     <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=9'>10</a>\u001b[0m   optimizer\u001b[39m=\u001b[39mkeras\u001b[39m.\u001b[39moptimizers\u001b[39m.\u001b[39mAdam()\n\u001b[1;32m     <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=10'>11</a>\u001b[0m )\n\u001b[0;32m---> <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=12'>13</a>\u001b[0m model\u001b[39m.\u001b[39;49mfit(X_train, y_train, epochs\u001b[39m=\u001b[39;49m\u001b[39m20\u001b[39;49m)\n\u001b[1;32m     <a href='vscode-notebook-cell:/Users/carlschader/programming/ml-tensorflow/ch15/ch15.ipynb#X22sZmlsZQ%3D%3D?line=13'>14</a>\u001b[0m \u001b[39mprint\u001b[39m(tf\u001b[39m.\u001b[39mreduce_mean(last_time_step_mse(y_test, model\u001b[39m.\u001b[39mpredict(X_test))))\n\nFile \u001b[0;32m~/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/utils/traceback_utils.py:70\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     67\u001b[0m     filtered_tb \u001b[39m=\u001b[39m _process_traceback_frames(e\u001b[39m.\u001b[39m__traceback__)\n\u001b[1;32m     68\u001b[0m     \u001b[39m# To get the full stack trace, call:\u001b[39;00m\n\u001b[1;32m     69\u001b[0m     \u001b[39m# `tf.debugging.disable_traceback_filtering()`\u001b[39;00m\n\u001b[0;32m---> 70\u001b[0m     \u001b[39mraise\u001b[39;00m e\u001b[39m.\u001b[39mwith_traceback(filtered_tb) \u001b[39mfrom\u001b[39;00m \u001b[39mNone\u001b[39m\n\u001b[1;32m     71\u001b[0m \u001b[39mfinally\u001b[39;00m:\n\u001b[1;32m     72\u001b[0m     \u001b[39mdel\u001b[39;00m filtered_tb\n\nFile \u001b[0;32m/var/folders/sw/q7k30xcj51x3tc06z506z3n00000gn/T/__autograph_generated_fileil0kcc5m.py:15\u001b[0m, in \u001b[0;36mouter_factory.<locals>.inner_factory.<locals>.tf__train_function\u001b[0;34m(iterator)\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[1;32m     14\u001b[0m     do_return \u001b[39m=\u001b[39m \u001b[39mTrue\u001b[39;00m\n\u001b[0;32m---> 15\u001b[0m     retval_ \u001b[39m=\u001b[39m ag__\u001b[39m.\u001b[39mconverted_call(ag__\u001b[39m.\u001b[39mld(step_function), (ag__\u001b[39m.\u001b[39mld(\u001b[39mself\u001b[39m), ag__\u001b[39m.\u001b[39mld(iterator)), \u001b[39mNone\u001b[39;00m, fscope)\n\u001b[1;32m     16\u001b[0m \u001b[39mexcept\u001b[39;00m:\n\u001b[1;32m     17\u001b[0m     do_return \u001b[39m=\u001b[39m \u001b[39mFalse\u001b[39;00m\n\nFile \u001b[0;32m/var/folders/sw/q7k30xcj51x3tc06z506z3n00000gn/T/__autograph_generated_file56xer_oq.py:10\u001b[0m, in \u001b[0;36mouter_factory.<locals>.inner_factory.<locals>.tf__call\u001b[0;34m(self, inputs, states)\u001b[0m\n\u001b[1;32m      8\u001b[0m do_return \u001b[39m=\u001b[39m \u001b[39mFalse\u001b[39;00m\n\u001b[1;32m      9\u001b[0m retval_ \u001b[39m=\u001b[39m ag__\u001b[39m.\u001b[39mUndefinedReturnValue()\n\u001b[0;32m---> 10\u001b[0m (new_outputs, new_states) \u001b[39m=\u001b[39m ag__\u001b[39m.\u001b[39;49mconverted_call(ag__\u001b[39m.\u001b[39;49mld(\u001b[39mself\u001b[39;49m)\u001b[39m.\u001b[39;49msimpleRNNCell, (ag__\u001b[39m.\u001b[39;49mld(inputs), ag__\u001b[39m.\u001b[39;49mld(states)), \u001b[39mNone\u001b[39;49;00m, fscope)\n\u001b[1;32m     11\u001b[0m normalized_outputs \u001b[39m=\u001b[39m ag__\u001b[39m.\u001b[39mconverted_call(ag__\u001b[39m.\u001b[39mld(\u001b[39mself\u001b[39m)\u001b[39m.\u001b[39mactivation, (ag__\u001b[39m.\u001b[39mconverted_call(ag__\u001b[39m.\u001b[39mld(\u001b[39mself\u001b[39m)\u001b[39m.\u001b[39mlayer_norm, (ag__\u001b[39m.\u001b[39mld(new_outputs),), \u001b[39mNone\u001b[39;00m, fscope),), \u001b[39mNone\u001b[39;00m, fscope)\n\u001b[1;32m     12\u001b[0m \u001b[39mtry\u001b[39;00m:\n\n\u001b[0;31mValueError\u001b[0m: in user code:\n\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/training.py\", line 1160, in train_function  *\n        return step_function(self, iterator)\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/training.py\", line 1146, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/training.py\", line 1135, in run_step  **\n        outputs = model.train_step(data)\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/training.py\", line 993, in train_step\n        y_pred = self(x, training=True)\n    File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/utils/traceback_utils.py\", line 70, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n    File \"/var/folders/sw/q7k30xcj51x3tc06z506z3n00000gn/T/__autograph_generated_file56xer_oq.py\", line 10, in tf__call\n        (new_outputs, new_states) = ag__.converted_call(ag__.ld(self).simpleRNNCell, (ag__.ld(inputs), ag__.ld(states)), None, fscope)\n\n    ValueError: Exception encountered when calling layer \"ln_simple_rnn_cell_77\" \"                 f\"(type LNSimpleRNNCell).\n    \n    in user code:\n    \n        File \"/var/folders/sw/q7k30xcj51x3tc06z506z3n00000gn/T/ipykernel_84655/3103126211.py\", line 16, in call  *\n            new_outputs, new_states = self.simpleRNNCell(inputs, states)\n        File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/layers/rnn/base_rnn.py\", line 623, in __call__  **\n            return super().__call__(inputs, **kwargs)\n        File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/utils/traceback_utils.py\", line 70, in error_handler\n            raise e.with_traceback(filtered_tb) from None\n        File \"/Users/carlschader/programming/ml-tensorflow/.venv/lib/python3.10/site-packages/keras/engine/input_spec.py\", line 232, in assert_input_compatibility\n            raise ValueError(\n    \n        ValueError: Input 0 of layer \"simple_rnn\" is incompatible with the layer: expected ndim=3, found ndim=2. Full shape received: (None, 1)\n    \n    \n    Call arguments received by layer \"ln_simple_rnn_cell_77\" \"                 f\"(type LNSimpleRNNCell):\n      • inputs=tf.Tensor(shape=(None, 1), dtype=float32)\n      • states=('tf.Tensor(shape=(None, 20), dtype=float32)',)\n"
}
''')